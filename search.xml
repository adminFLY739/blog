<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>py实验6</title>
      <link href="/blog/2024/4/7/py%E5%AE%9E%E9%AA%8C6/"/>
      <url>/blog/2024/4/7/py%E5%AE%9E%E9%AA%8C6/</url>
      
        <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.setup(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">turtle.title(<span class="string">&quot;绘制三角形&quot;</span>)</span><br><span class="line">t = turtle.Turtle()</span><br><span class="line">t.up()</span><br><span class="line">t.goto(-<span class="number">100</span>, -<span class="number">50</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.pensize(<span class="number">10</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">t.forward(<span class="number">200</span>)</span><br><span class="line">t.left(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">200</span>)</span><br><span class="line">t.left(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">200</span>)</span><br><span class="line">turtle.mainloop()</span><br></pre></td></tr></table></figure><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.setup(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">turtle.title(<span class="string">&quot;绘制套圈图形&quot;</span>)</span><br><span class="line">t = turtle.Turtle()</span><br><span class="line">t.up()</span><br><span class="line">t.goto(<span class="number">100</span>, <span class="number">0</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.left(<span class="number">90</span>)</span><br><span class="line">t.pensize(<span class="number">10</span>)</span><br><span class="line">t.pencolor(<span class="string">&quot;orange&quot;</span>)</span><br><span class="line">t.circle(<span class="number">10</span>)</span><br><span class="line">t.circle(<span class="number">50</span>)</span><br><span class="line">t.circle(<span class="number">90</span>)</span><br><span class="line">t.circle(<span class="number">130</span>)</span><br><span class="line">turtle.mainloop()</span><br></pre></td></tr></table></figure><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.setup(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">turtle.title(<span class="string">&quot;绘制嵌套六角形&quot;</span>)</span><br><span class="line">t = turtle.Turtle()</span><br><span class="line">t.pensize(<span class="number">1</span>)</span><br><span class="line">t.color(<span class="string">&quot;navy&quot;</span>)</span><br><span class="line">lenth = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">    t.forward(lenth)</span><br><span class="line">    lenth += <span class="number">3</span></span><br><span class="line">    t.left(<span class="number">60</span>)</span><br><span class="line">turtle.mainloop()</span><br></pre></td></tr></table></figure><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.setup(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">turtle.title(<span class="string">&quot;绘制小黄车&quot;</span>)</span><br><span class="line">t = turtle.Turtle()</span><br><span class="line">t.pensize(<span class="number">5</span>)</span><br><span class="line">t.color(<span class="string">&quot;yellow&quot;</span>)</span><br><span class="line">t.left(<span class="number">60</span>)</span><br><span class="line">t.forward(<span class="number">140</span>)</span><br><span class="line">t.left(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">140</span>)</span><br><span class="line">t.left(<span class="number">60</span>)</span><br><span class="line">t.forward(<span class="number">140</span>)</span><br><span class="line">t.left(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">140</span>)</span><br><span class="line">t.left(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">180</span>)</span><br><span class="line">t.right(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">t.up()</span><br><span class="line">t.goto(-<span class="number">120</span>, <span class="number">0</span>)</span><br><span class="line">t.left(<span class="number">90</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.circle(<span class="number">20</span>)</span><br><span class="line">t.up()</span><br><span class="line">t.goto(-<span class="number">70</span>, <span class="number">0</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.circle(<span class="number">70</span>)</span><br><span class="line"></span><br><span class="line">t.up()</span><br><span class="line">t.goto(<span class="number">140</span>, <span class="number">0</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.right(<span class="number">90</span>)</span><br><span class="line">t.left(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">180</span>)</span><br><span class="line">t.left(<span class="number">60</span>)</span><br><span class="line">t.forward(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">t.up()</span><br><span class="line">t.goto(<span class="number">160</span>, <span class="number">0</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.right(<span class="number">90</span>)</span><br><span class="line">t.circle(<span class="number">20</span>)</span><br><span class="line">t.up()</span><br><span class="line">t.goto(<span class="number">210</span>, <span class="number">0</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.circle(<span class="number">70</span>)</span><br><span class="line"></span><br><span class="line">turtle.mainloop()</span><br></pre></td></tr></table></figure><h1 id="5"><a href="#5" class="headerlink" title="5"></a>5</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">koch</span>(<span class="params">n, lenth</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        t.forward(lenth)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        koch(n - <span class="number">1</span>, lenth / <span class="number">3</span>)</span><br><span class="line">        t.left(<span class="number">60</span>)</span><br><span class="line">        koch(n - <span class="number">1</span>, lenth / <span class="number">3</span>)</span><br><span class="line">        t.right(<span class="number">120</span>)</span><br><span class="line">        koch(n - <span class="number">1</span>, lenth / <span class="number">3</span>)</span><br><span class="line">        t.left(<span class="number">60</span>)</span><br><span class="line">        koch(n - <span class="number">1</span>, lenth / <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">turtle.setup(<span class="number">640</span>, <span class="number">480</span>)</span><br><span class="line">turtle.title(<span class="string">&quot;koch&quot;</span>)</span><br><span class="line">t = turtle.Turtle()</span><br><span class="line">t.up()</span><br><span class="line">t.goto(-<span class="number">150</span>, -<span class="number">70</span>)</span><br><span class="line">t.down()</span><br><span class="line">t.left(<span class="number">60</span>)</span><br><span class="line">n = <span class="built_in">eval</span>(<span class="built_in">input</span>())</span><br><span class="line">koch(n, <span class="number">300</span>)</span><br><span class="line">t.right(<span class="number">120</span>)</span><br><span class="line">koch(n, <span class="number">300</span>)</span><br><span class="line">t.right(<span class="number">120</span>)</span><br><span class="line">koch(n, <span class="number">300</span>)</span><br><span class="line">turtle.mainloop()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>py实验5</title>
      <link href="/blog/2024/4/3/py%E5%AE%9E%E9%AA%8C5/"/>
      <url>/blog/2024/4/3/py%E5%AE%9E%E9%AA%8C5/</url>
      
        <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compute_area</span>(<span class="params">a, b, c, d, alpha</span>):</span><br><span class="line">    p = (a + b + c + d) / <span class="number">2</span></span><br><span class="line">    area = ((p - a) * (p - b) * (p - c) * (p - d) - a * b * c * d * math.cos(alpha) ** <span class="number">2</span>) ** (<span class="number">1</span> / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> area</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    a = <span class="number">3</span></span><br><span class="line">    b = <span class="number">4</span></span><br><span class="line">    c = <span class="number">5</span></span><br><span class="line">    d = <span class="number">5</span></span><br><span class="line">    alpha = math.radians(<span class="number">145</span>)</span><br><span class="line">    <span class="built_in">print</span>(compute_area(a, b, c, d, alpha))</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">reverse</span>(<span class="params">value</span>):</span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> value &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">while</span> value &gt; <span class="number">0</span>:</span><br><span class="line">            temp = value % <span class="number">10</span></span><br><span class="line">            ans = ans * <span class="number">10</span> + temp</span><br><span class="line">            value = value // <span class="number">10</span></span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        value *= -<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> value &gt; <span class="number">0</span>:</span><br><span class="line">            temp = value % <span class="number">10</span></span><br><span class="line">            ans = ans * <span class="number">10</span> + temp</span><br><span class="line">            value = value // <span class="number">10</span></span><br><span class="line">        <span class="keyword">return</span> ans * (-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    value = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="built_in">print</span>(reverse(value))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">m</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">sum</span> += (-<span class="number">1</span>) ** (i + <span class="number">1</span>) / (<span class="number">2</span> * i - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    i = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%.4f&quot;</span> % (<span class="number">4</span> * m(i)))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">total</span>(<span class="params">a = <span class="number">0</span>, b = <span class="number">100</span>, c = <span class="number">0</span></span>):</span><br><span class="line">    <span class="keyword">return</span> a + b + c</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="built_in">print</span>(total())</span><br><span class="line">    <span class="built_in">print</span>(total(<span class="number">6</span>))</span><br><span class="line">    <span class="built_in">print</span>(total(<span class="number">6</span>, <span class="number">10</span>))</span><br><span class="line">    <span class="built_in">print</span>(total(<span class="number">6</span>, <span class="number">10</span>, <span class="number">20</span>))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="5"><a href="#5" class="headerlink" title="5"></a>5</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">count_digit</span>(<span class="params">number, digit</span>):</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    number = <span class="built_in">abs</span>(number)</span><br><span class="line">    <span class="keyword">while</span> number &gt; <span class="number">0</span>:</span><br><span class="line">        temp = number % <span class="number">10</span></span><br><span class="line">        number = number // <span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> temp == digit:</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> cnt</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    n, d = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">    c = count_digit(n, d)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Number of digit &#123;0&#125; in &#123;1&#125;: &#123;2&#125;&quot;</span>.<span class="built_in">format</span>(d, n, c))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="6"><a href="#6" class="headerlink" title="6"></a>6</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_palindrome</span>(<span class="params">number</span>):</span><br><span class="line">    re_number = <span class="number">0</span></span><br><span class="line">    Number = number</span><br><span class="line">    <span class="keyword">while</span> number &gt; <span class="number">0</span>:</span><br><span class="line">        temp = number % <span class="number">10</span></span><br><span class="line">        re_number = re_number * <span class="number">10</span> + temp</span><br><span class="line">        number = number // <span class="number">10</span></span><br><span class="line">    <span class="keyword">return</span> re_number == Number</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    value = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="built_in">print</span>(is_palindrome(value))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="7"><a href="#7" class="headerlink" title="7"></a>7</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_perfect_number</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">        <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">sum</span> += i</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span> == n</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    line = <span class="built_in">input</span>().split()</span><br><span class="line">    n = <span class="built_in">int</span>(line[<span class="number">0</span>])</span><br><span class="line">    m = <span class="built_in">int</span>(line[<span class="number">1</span>])</span><br><span class="line">    flag = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n, m + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> is_perfect_number(i):</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            <span class="built_in">print</span>(i, end = <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="8"><a href="#8" class="headerlink" title="8"></a>8</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">is_ugly</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                n = n // <span class="number">2</span></span><br><span class="line">            <span class="keyword">elif</span> n % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">                n = n // <span class="number">3</span></span><br><span class="line">            <span class="keyword">elif</span> n % <span class="number">5</span> == <span class="number">0</span>:</span><br><span class="line">                n = n // <span class="number">5</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> n != <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="built_in">print</span>(is_ugly(n))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="9"><a href="#9" class="headerlink" title="9"></a>9</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">square_root</span>(<span class="params">value</span>):</span><br><span class="line">    lastguess = <span class="number">1.0</span></span><br><span class="line">    nextguess = (lastguess + value / lastguess) / <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">abs</span>(nextguess - lastguess) &gt;= <span class="number">0.000001</span>:</span><br><span class="line">        lastguess = nextguess</span><br><span class="line">        nextguess = (lastguess + value / lastguess) / <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> nextguess</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    value = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">format</span>(square_root(value), <span class="string">&quot;.6f&quot;</span>))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="10"><a href="#10" class="headerlink" title="10"></a>10</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x, n</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">sum</span> += (-<span class="number">1</span>) ** (i - <span class="number">1</span>) * x ** i</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    line = <span class="built_in">input</span>().split()</span><br><span class="line">    x = <span class="built_in">float</span>(line[<span class="number">0</span>])</span><br><span class="line">    n = <span class="built_in">int</span>(line[<span class="number">1</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%.2f&quot;</span> % (f(x, n)))</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/blog/2024/4/1/python/"/>
      <url>/blog/2024/4/1/python/</url>
      
        <content type="html"><![CDATA[<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><blockquote><p>Micro Frank：教育的目的不是诺奖, 体育的目的不是金牌</p></blockquote><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><a href="###%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%95%B0%E5%AD%97">格式化数字</a> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(<span class="string">&quot;&#123;2&#125;&#123;0&#125;&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;abc&quot;</span>, <span class="number">123</span>, <span class="number">456</span>))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(<span class="string">&quot;&#123;a&#125;&#123;b&#125;&#123;c&#125;&quot;</span>.<span class="built_in">format</span>(a = <span class="string">&quot;abc&quot;</span>, b = <span class="number">123</span>, c = <span class="number">456</span>))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(<span class="string">&quot;&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(<span class="number">96.1234</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p><strong>字母</strong>,数字,<strong>下划线</strong></p><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><h3 id="赋值语句"><a href="#赋值语句" class="headerlink" title="赋值语句"></a>赋值语句</h3><p>变量在左</p><h4 id="级联赋值"><a href="#级联赋值" class="headerlink" title="级联赋值"></a>级联赋值</h4><p><code>x = y = z = 1</code></p><h4 id="平行赋值"><a href="#平行赋值" class="headerlink" title="平行赋值"></a>平行赋值</h4><p><code>x, y, z = 1, 2, 3</code>–&gt;可以交换变量</p><h4 id="多行赋"><a href="#多行赋" class="headerlink" title="多行赋"></a>多行赋</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x     = <span class="number">1</span></span><br><span class="line">abc   = <span class="number">2</span></span><br><span class="line">apple = <span class="number">3</span></span><br></pre></td></tr></table></figure><p>对齐</p><h3 id="数值类型和运算符"><a href="#数值类型和运算符" class="headerlink" title="数值类型和运算符"></a>数值类型和运算符</h3><p>任意大小的整数,一定范围的浮点数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;value = <span class="number">1.6</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">int</span>(value)</span><br><span class="line"><span class="number">1</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">round</span>(value)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">int</span>(<span class="string">&quot;34&quot;</span>)</span><br><span class="line"><span class="number">34</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">int</span>(<span class="string">&quot;003&quot;</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">int</span>(<span class="string">&quot;3.4&quot;</span>)</span><br><span class="line">wrong</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">int</span>(<span class="string">&quot;3+4&quot;</span>)</span><br><span class="line">wrong</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">float</span>(<span class="string">&quot;34&quot;</span>)</span><br><span class="line"><span class="number">34.0</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">float</span>(<span class="string">&quot;003&quot;</span>)</span><br><span class="line"><span class="number">3.0</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">float</span>(<span class="string">&quot;3+4&quot;</span>)</span><br><span class="line">wrong</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">eval</span>(<span class="string">&quot;34&quot;</span>)</span><br><span class="line"><span class="number">34</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">eval</span>(<span class="string">&quot;3.4&quot;</span>)</span><br><span class="line"><span class="number">3.4</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">eval</span>(<span class="string">&quot;003&quot;</span>)</span><br><span class="line">wrong</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">eval</span>(<span class="string">&quot;3+4&quot;</span>)</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="格式化数字"><a href="#格式化数字" class="headerlink" title="格式化数字"></a>格式化数字</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;%.2f&quot;</span> % (<span class="number">3.1415926</span>))</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(<span class="built_in">format</span>(<span class="number">3.1415926</span>, <span class="string">&quot;&lt;10.2e&quot;</span>)+<span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="comment">#  左对齐,占用10个字符,保留两位小数,使用科学计数法</span></span><br><span class="line"><span class="number">3.14e+00</span>  a</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(<span class="built_in">format</span>(<span class="number">0.739799</span>, <span class="string">&quot;10.2%&quot;</span>))</span><br><span class="line">    <span class="number">73.98</span>%</span><br></pre></td></tr></table></figure><p>二进制:b</p><p>八进制:o</p><p>十进制:d</p><p>十六进制:x</p><h3 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h3><h3 id="字符串和字符"><a href="#字符串和字符" class="headerlink" title="字符串和字符"></a>字符串和字符</h3><h4 id="ord"><a href="#ord" class="headerlink" title="ord"></a>ord</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">ord</span>(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="number">97</span></span><br></pre></td></tr></table></figure><h4 id="chr"><a href="#chr" class="headerlink" title="chr"></a>chr</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">chr</span>(<span class="number">97</span>)</span><br><span class="line"><span class="string">&quot;a&quot;</span></span><br></pre></td></tr></table></figure><h4 id="str"><a href="#str" class="headerlink" title="str"></a>str</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">str</span>(<span class="number">123.456</span>)</span><br><span class="line"><span class="number">123.456</span></span><br></pre></td></tr></table></figure><h4 id="len-max-min"><a href="#len-max-min" class="headerlink" title="len&amp;max&amp;min"></a>len&amp;max&amp;min</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;s = <span class="string">&quot;Python&quot;</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">len</span>(s)</span><br><span class="line"><span class="number">6</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">max</span>(s)</span><br><span class="line"><span class="string">&#x27;y&#x27;</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">min</span>(s)</span><br><span class="line"><span class="string">&#x27;P&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p><code>\n</code> <code>\t</code> <code>\\</code> <code>\&#39;</code> <code>\&quot;</code> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(<span class="string">&#x27;\101&#x27;</span>, <span class="string">&#x27;x41&#x27;</span>)</span><br><span class="line">A A</span><br></pre></td></tr></table></figure><p><code>\ddd</code> :八进制</p><p><code>\xhh</code> :十六进制</p><h4 id="原生字符串"><a href="#原生字符串" class="headerlink" title="原生字符串"></a>原生字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;s = <span class="string">&#x27;123\t456&#x27;</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(s)</span><br><span class="line"><span class="number">123</span><span class="number">456</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;s = <span class="string">r&#x27;123\t456&#x27;</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(s)</span><br><span class="line"><span class="number">123</span>\t456</span><br></pre></td></tr></table></figure><h4 id="end"><a href="#end" class="headerlink" title="end"></a>end</h4><p><code>print(&#39;abc&#39;, end = &#39;&#39;)</code> 结束字符串</p><h4 id="sep"><a href="#sep" class="headerlink" title="sep"></a>sep</h4><p><code>print(&#39;abc&#39;, &#39;def&#39;, sep = &#39;&#39;)</code> 分隔字符串</p><h4 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(<span class="built_in">format</span>(<span class="string">&#x27;Welcome to python!&#x27;</span>, <span class="string">&#x27;&gt;20s&#x27;</span>))</span><br><span class="line"><span class="comment">#  右对齐,占用10个字符</span></span><br><span class="line"><span class="comment">#  宽度会随着字符串超长而自动扩展</span></span><br><span class="line">  Welcome to python!</span><br></pre></td></tr></table></figure><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><ol><li>不可变对象,不能用索引改变</li><li>不能越界</li></ol><h4 id="测试字符串"><a href="#测试字符串" class="headerlink" title="测试字符串"></a>测试字符串</h4><h5 id="isalnum"><a href="#isalnum" class="headerlink" title="isalnum"></a>isalnum</h5><p>全部字母,数字</p><h5 id="isalpha"><a href="#isalpha" class="headerlink" title="isalpha"></a>isalpha</h5><p>全部字母</p><h5 id="isdigit"><a href="#isdigit" class="headerlink" title="isdigit"></a>isdigit</h5><p>全部数字</p><h5 id="isidentifier"><a href="#isidentifier" class="headerlink" title="isidentifier"></a>isidentifier</h5><p>标识符</p><h5 id="islower"><a href="#islower" class="headerlink" title="islower"></a>islower</h5><p>全部小写</p><h5 id="isupper"><a href="#isupper" class="headerlink" title="isupper"></a>isupper</h5><p>全部大写</p><h5 id="isspace"><a href="#isspace" class="headerlink" title="isspace"></a>isspace</h5><p>全部空白字符</p><h4 id="转换字符串"><a href="#转换字符串" class="headerlink" title="转换字符串"></a>转换字符串</h4><h5 id="capitalize"><a href="#capitalize" class="headerlink" title="capitalize"></a>capitalize</h5><h5 id="title"><a href="#title" class="headerlink" title="title"></a>title</h5><h5 id="swapcase"><a href="#swapcase" class="headerlink" title="swapcase"></a>swapcase</h5><h5 id="replace"><a href="#replace" class="headerlink" title="replace"></a>replace</h5><h4 id="删除空白"><a href="#删除空白" class="headerlink" title="删除空白"></a>删除空白</h4><h5 id="lstrip"><a href="#lstrip" class="headerlink" title="lstrip"></a>lstrip</h5><h5 id="rstrip"><a href="#rstrip" class="headerlink" title="rstrip"></a>rstrip</h5><h5 id="strip"><a href="#strip" class="headerlink" title="strip"></a>strip</h5><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>任何元素的序列,可以包含不同元素</p><p><code>list = []</code> </p><h4 id="len-max-min-sum"><a href="#len-max-min-sum" class="headerlink" title="len&amp;max&amp;min&amp;sum"></a>len&amp;max&amp;min&amp;sum</h4><p>min,max:相同类型元素</p><p>sum:数字</p><h4 id="split"><a href="#split" class="headerlink" title="split"></a>split</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;items = <span class="string">&quot;xwj is shaby&quot;</span>.split()</span><br><span class="line">&gt;&gt;&gt;items</span><br><span class="line">[<span class="string">&#x27;xwj&#x27;</span>, <span class="string">&#x27;is&#x27;</span>, <span class="string">&#x27;shaby&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h3><p>任何元素的序列,可以包含不同元素</p><p><code>tuple = ()</code> </p><p><code>tuple = (1,)</code> :元组而非整数对象</p><p><strong>元素值无法直接修改</strong></p><h4 id="len-max-min-sum-1"><a href="#len-max-min-sum-1" class="headerlink" title="len&amp;max&amp;min&amp;sum"></a>len&amp;max&amp;min&amp;sum</h4><p>min,max:相同类型元素</p><p>sum:数字</p><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><p>键值对集合</p><p><code>dict = &#123;&quot;a&quot;:1, &quot;b&quot;:2, &quot;c&quot;:3&#125;</code> </p><h4 id="len"><a href="#len" class="headerlink" title="len"></a>len</h4><p>长度</p><h4 id="dict-get-key"><a href="#dict-get-key" class="headerlink" title="dict.get(key)"></a>dict.get(key)</h4><p>返回</p><h4 id="dict-key"><a href="#dict-key" class="headerlink" title="dict[key]"></a>dict[key]</h4><p>访问</p><h4 id="dict-key-value"><a href="#dict-key-value" class="headerlink" title="dict[key] &#x3D; value"></a>dict[key] &#x3D; value</h4><p>修改,若键不存在,则创建</p><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><h4 id="abs"><a href="#abs" class="headerlink" title="abs"></a>abs</h4><h4 id="round"><a href="#round" class="headerlink" title="round"></a>round</h4><h4 id="pow"><a href="#pow" class="headerlink" title="pow"></a>pow</h4><h4 id="divmod"><a href="#divmod" class="headerlink" title="divmod"></a>divmod</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">divmod</span>(<span class="number">5</span>, <span class="number">2</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>(除数,余数)</p><h4 id="help"><a href="#help" class="headerlink" title="help"></a>help</h4><p><code>help(abs)</code> </p><h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><p><code>import math</code> </p><h4 id="math-fabs"><a href="#math-fabs" class="headerlink" title="math.fabs"></a>math.fabs</h4><p>浮点绝对值</p><h4 id="math-ceil"><a href="#math-ceil" class="headerlink" title="math.ceil"></a>math.ceil</h4><p>向上取整</p><h4 id="math-floor"><a href="#math-floor" class="headerlink" title="math.floor"></a>math.floor</h4><p>向下取整</p><h4 id="math-trunc"><a href="#math-trunc" class="headerlink" title="math.trunc"></a>math.trunc</h4><p>整数部分</p><h4 id="math-modf"><a href="#math-modf" class="headerlink" title="math.modf"></a>math.modf</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> math</span><br><span class="line">&gt;&gt;&gt;math.modf(<span class="number">8.6</span>)</span><br><span class="line">(<span class="number">0.5999999999999996</span>, <span class="number">8.0</span>)</span><br></pre></td></tr></table></figure><p>(小数,整数)</p><h4 id="math-fmod-x-y"><a href="#math-fmod-x-y" class="headerlink" title="math.fmod(x,y)"></a>math.fmod(x,y)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> math</span><br><span class="line">&gt;&gt;&gt;math.fmod(<span class="number">8</span>, <span class="number">3</span>)</span><br><span class="line"><span class="number">2.0</span></span><br></pre></td></tr></table></figure><p>取浮点模</p><h4 id="math-fsum-x-y-…"><a href="#math-fsum-x-y-…" class="headerlink" title="math.fsum([x,y, …])"></a>math.fsum([x,y, …])</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> math</span><br><span class="line">&gt;&gt;&gt;math.fsum([<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>])</span><br><span class="line"><span class="number">0.6</span></span><br></pre></td></tr></table></figure><p>求浮点和</p><h4 id="math-factorial"><a href="#math-factorial" class="headerlink" title="math.factorial"></a>math.factorial</h4><p>求阶乘</p><h4 id="math-gcd-a-b"><a href="#math-gcd-a-b" class="headerlink" title="math.gcd(a,b)"></a>math.gcd(a,b)</h4><p>求最大公约数</p><h4 id="math-pow-a-b"><a href="#math-pow-a-b" class="headerlink" title="math.pow(a,b)"></a>math.pow(a,b)</h4><p>求次方</p><h4 id="math-exp"><a href="#math-exp" class="headerlink" title="math.exp"></a>math.exp</h4><p>求e的次方</p><h4 id="math-log"><a href="#math-log" class="headerlink" title="math.log"></a>math.log</h4><p>求e为底的对数</p><h4 id="math-log-x-base"><a href="#math-log-x-base" class="headerlink" title="math.log(x, base)"></a>math.log(x, base)</h4><p>求base为底的对数</p><h4 id="math-sqrt"><a href="#math-sqrt" class="headerlink" title="math.sqrt"></a>math.sqrt</h4><p>求平方根</p><h3 id="对象和方法"><a href="#对象和方法" class="headerlink" title="对象和方法"></a>对象和方法</h3><h4 id="三要素"><a href="#三要素" class="headerlink" title="三要素"></a>三要素</h4><p>id, type, value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;n = <span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">id</span>(n)</span><br><span class="line">?</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">type</span>(n)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;x = <span class="number">3</span></span><br><span class="line">&gt;&gt;&gt;y = x</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">id</span>(x)</span><br><span class="line">?</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">id</span>(y)</span><br><span class="line">?</span><br><span class="line">&gt;&gt;&gt;y = y + <span class="number">1</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">id</span>(y)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>id(x)</code> &#x3D;&#x3D; <code>id(y)</code> </p><p>后来的<code>id(y)</code>  !&#x3D; <code>id(x)</code> </p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;s = <span class="string">&#x27;HELlo&#x27;</span></span><br><span class="line">&gt;&gt;&gt;s.lower()</span><br><span class="line"><span class="string">&#x27;hello&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;s.upper()</span><br><span class="line"><span class="string">&#x27;HELLO&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="None"><a href="#None" class="headerlink" title="None"></a>None</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">type</span>(<span class="literal">None</span>)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;NoneType&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><h3 id="bool"><a href="#bool" class="headerlink" title="bool"></a>bool</h3><h3 id="成员关系运算符"><a href="#成员关系运算符" class="headerlink" title="成员关系运算符"></a>成员关系运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br><span class="line">&gt;&gt;&gt;s = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">&gt;&gt;&gt;s <span class="keyword">in</span> <span class="built_in">list</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;s = <span class="string">&#x27;welcome&#x27;</span></span><br><span class="line">&gt;&gt;&gt;<span class="string">&#x27;come&#x27;</span> <span class="keyword">in</span> s</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="对象身份运算符"><a href="#对象身份运算符" class="headerlink" title="对象身份运算符"></a>对象身份运算符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;a = <span class="number">1</span></span><br><span class="line">&gt;&gt;&gt;b = <span class="number">1</span></span><br><span class="line">&gt;&gt;&gt;a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">id</span>(a) == <span class="built_in">id</span>(b)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;list1 = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">&gt;&gt;&gt;list2 = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">&gt;&gt;&gt;list1 <span class="keyword">is</span> list2</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><p>每次创建列表时都会分配一个新的内存空间,虽然元素值相同,但是内存地址不同</p><h3 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h3><p><code>and</code> 和<code>or</code> 具有短路性</p><h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">import</span> random</span><br><span class="line">&gt;&gt;&gt;random.random()</span><br><span class="line"><span class="comment"># [0, 1) - float</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;random.randint()</span><br><span class="line"><span class="comment"># [a, b] - int</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;random.randomrange()</span><br><span class="line"><span class="comment"># [a, b - 1] - int</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;random.sample(<span class="built_in">list</span>, k)</span><br><span class="line"><span class="comment"># [, , , ...] - a list</span></span><br></pre></td></tr></table></figure><h3 id="素数"><a href="#素数" class="headerlink" title="素数"></a>素数</h3><h3 id="pass-break-continue"><a href="#pass-break-continue" class="headerlink" title="pass&amp;break&amp;continue"></a>pass&amp;break&amp;continue</h3><p><code>pass</code> 空语句,占位</p><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><h3 id="没有返回值"><a href="#没有返回值" class="headerlink" title="没有返回值"></a>没有返回值</h3><p>默认返回<code>None</code></p><h3 id="返回单个值"><a href="#返回单个值" class="headerlink" title="返回单个值"></a>返回单个值</h3><h4 id="print"><a href="#print" class="headerlink" title="print"></a>print</h4><h4 id="return"><a href="#return" class="headerlink" title="return"></a>return</h4><h3 id="返回多个值"><a href="#返回多个值" class="headerlink" title="返回多个值"></a>返回多个值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x, <span class="number">2</span> * x, <span class="number">3</span> * x, <span class="number">4</span> * x</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(f(x))</span><br><span class="line">(, , , ...)</span><br><span class="line"><span class="comment"># 元组</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;t1, t2, t3, t4 = f(x)</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>(t1, t2, t3, t4)</span><br><span class="line">? ? ? ?</span><br><span class="line"><span class="comment"># 若干个数</span></span><br></pre></td></tr></table></figure><h3 id="位置参数-关键字参数"><a href="#位置参数-关键字参数" class="headerlink" title="位置参数&amp;关键字参数"></a>位置参数&amp;关键字参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params"><span class="built_in">str</span>, n</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line">f(<span class="string">&quot;nihao&quot;</span>, <span class="number">3</span>)</span><br><span class="line">f(n = <span class="number">3</span>, <span class="built_in">str</span> = <span class="string">&quot;hello&quot;</span>)</span><br></pre></td></tr></table></figure><p>位置参数要出现在任何关键字参数之前</p><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params"><span class="built_in">str</span> = <span class="string">&quot;pxy&quot;</span>, n = <span class="number">9</span></span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>)</span><br><span class="line">    </span><br><span class="line">f()</span><br></pre></td></tr></table></figure><p>默认值之后的任何参数都要指定默认值</p><h3 id="形参与实参"><a href="#形参与实参" class="headerlink" title="形参与实参"></a>形参与实参</h3><p>实参:数字,字符串,布尔值,元组 -&gt;不改变</p><p>实参:列表,字典 -&gt;改变</p><h3 id="解包裹"><a href="#解包裹" class="headerlink" title="解包裹"></a>解包裹</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a, b, c</span>):</span><br><span class="line">    <span class="built_in">print</span>(a, b, c)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">tuple</span> = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">f(*<span class="built_in">tuple</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span> = &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>, <span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;</span><br><span class="line">f(**<span class="built_in">dict</span>)</span><br></pre></td></tr></table></figure><h3 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h3><p>局部变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">y = <span class="number">5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">    y = <span class="number">9</span></span><br><span class="line">    <span class="built_in">print</span>(y)</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    f()</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>():</span><br><span class="line">    x = <span class="number">3</span></span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    </span><br><span class="line">main()</span><br><span class="line"><span class="built_in">print</span>(y)</span><br><span class="line"><span class="comment"># 2 3 2</span></span><br><span class="line"><span class="comment"># 9 5</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">    f()</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>():</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    </span><br><span class="line">main()</span><br><span class="line"><span class="comment"># wrong</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">global</span> x<span class="comment"># 成功修改全局变量</span></span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment"># 2 2</span></span><br></pre></td></tr></table></figure><h3 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="keyword">lambda</span> x, y : x + y</span><br><span class="line"><span class="built_in">print</span>(f(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"><span class="comment"># 3</span></span><br></pre></td></tr></table></figure><p>定义简短函数,匿名函数</p><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iterable = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">result = <span class="built_in">map</span>(function, iterable)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br><span class="line"><span class="comment"># function对可迭代对象中的每个元素进行处理,返回所有处理后的元素构成的新可迭代对象</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iterable1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>]</span><br><span class="line">iterable2 = [<span class="number">2</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">8</span>]</span><br><span class="line">result = <span class="built_in">map</span>(function, iterable1, iterable2)</span><br></pre></td></tr></table></figure><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">result = <span class="built_in">filter</span>(function, <span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br><span class="line"><span class="comment"># [, , , ...]</span></span><br></pre></td></tr></table></figure><p>筛选：返回True的值</p><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> functools</span><br><span class="line"><span class="built_in">print</span>(functools.reduce(function, [, , , ...], x))</span><br></pre></td></tr></table></figure><h2 id="5"><a href="#5" class="headerlink" title="5"></a>5</h2><h3 id="组合数据类型"><a href="#组合数据类型" class="headerlink" title="组合数据类型"></a>组合数据类型</h3><h4 id="序列类型"><a href="#序列类型" class="headerlink" title="序列类型"></a>序列类型</h4><h5 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h5><h5 id="列表-1"><a href="#列表-1" class="headerlink" title="列表"></a>列表</h5><h5 id="元组-1"><a href="#元组-1" class="headerlink" title="元组"></a>元组</h5><h4 id="集合类型"><a href="#集合类型" class="headerlink" title="集合类型"></a>集合类型</h4><h4 id="字典类型"><a href="#字典类型" class="headerlink" title="字典类型"></a>字典类型</h4><h3 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h3><p>UTF-8与ASCII兼容</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C of Micro_Frank</title>
      <link href="/blog/2024/4/1/c-of-micro-frank/"/>
      <url>/blog/2024/4/1/c-of-micro-frank/</url>
      
        <content type="html"><![CDATA[<h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><blockquote><p>今天是不是都 tm进阿里了?</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="structure"><a href="#structure" class="headerlink" title="structure"></a>structure</h2><h3 id="stdio"><a href="#stdio" class="headerlink" title="stdio"></a><strong>stdio</strong></h3><p>standard input&amp;output</p><h3 id="preprocessor-instructions"><a href="#preprocessor-instructions" class="headerlink" title="preprocessor instructions"></a><strong>preprocessor instructions</strong></h3><p><code>#include &lt;stdio.h&gt;</code> </p><h3 id="function"><a href="#function" class="headerlink" title="function"></a><strong>function</strong></h3><h3 id="declaration"><a href="#declaration" class="headerlink" title="declaration"></a><strong>declaration</strong></h3><p><code>int number;</code> </p><h3 id="definition"><a href="#definition" class="headerlink" title="definition"></a><strong>definition</strong></h3><p><code>int number = 123;</code> </p><h3 id="assignment"><a href="#assignment" class="headerlink" title="assignment"></a><strong>assignment</strong></h3><p><code>number = 123;</code> </p><h3 id="control"><a href="#control" class="headerlink" title="control"></a><strong>control</strong></h3><h3 id="null"><a href="#null" class="headerlink" title="null"></a><strong>null</strong></h3><p><code>;</code> </p><h3 id="identifier"><a href="#identifier" class="headerlink" title="identifier"></a><strong>identifier</strong></h3><p><code>number</code> </p><ol><li>驼峰命名法</li><li>下划线命名法</li></ol><h3 id="keyword"><a href="#keyword" class="headerlink" title="keyword"></a><strong>keyword</strong></h3><p><code>int</code> </p><h3 id="return-0"><a href="#return-0" class="headerlink" title="return 0"></a><strong>return 0</strong></h3><p>end</p><h2 id="固定宽度整数类型"><a href="#固定宽度整数类型" class="headerlink" title="固定宽度整数类型"></a>固定宽度整数类型</h2><h3 id="signed-int-signed-int"><a href="#signed-int-signed-int" class="headerlink" title="signed int&#x2F;signed&#x2F;int"></a>signed int&#x2F;signed&#x2F;int</h3><p>4B &#x3D; 32b</p><p>-2^31^ ~2^31^ -1</p><p><code>%o</code> 八进制</p><p><code>%d</code> 十进制</p><p><code>%#x</code>, <code>%#X</code> 十六进制(格式修饰符)</p><h3 id="unsigned-int-unsigned"><a href="#unsigned-int-unsigned" class="headerlink" title="unsigned int&#x2F;unsigned"></a>unsigned int&#x2F;unsigned</h3><p>0~2^32^ -1</p><p><code>%u</code> </p><p>索引</p><h3 id="signed-short-int-signed-short-short-int-short"><a href="#signed-short-int-signed-short-short-int-short" class="headerlink" title="signed short int&#x2F;signed short&#x2F;short int&#x2F;short"></a>signed short int&#x2F;signed short&#x2F;short int&#x2F;short</h3><p>-2^15^ ~2^15^ -1</p><p><code>%hd</code> </p><h3 id="unsigned-short-int-unsigned-short"><a href="#unsigned-short-int-unsigned-short" class="headerlink" title="unsigned short int&#x2F;unsigned short"></a>unsigned short int&#x2F;unsigned short</h3><p>0~2^16^ -1</p><p><code>%hu</code> </p><p>游戏像素数据</p><h3 id="signed-long-int-signed-long-long-int-long"><a href="#signed-long-int-signed-long-long-int-long" class="headerlink" title="signed long int&#x2F;signed long&#x2F;long int&#x2F;long"></a>signed long int&#x2F;signed long&#x2F;long int&#x2F;long</h3><p><code>%ld</code> </p><p>32位CPU: 4B</p><p>64位CPU: 8B</p><h3 id="unsigned-long-int-unsigned-long"><a href="#unsigned-long-int-unsigned-long" class="headerlink" title="unsigned long int&#x2F;unsigned long"></a>unsigned long int&#x2F;unsigned long</h3><p><code>%lu</code> </p><p>32位CPU: 4B</p><p>64位CPU: 8B</p><h3 id="long-long"><a href="#long-long" class="headerlink" title="long long"></a>long long</h3><p><code>%lld</code> </p><p>32位CPU: 8B</p><p>64位CPU: 8B</p><h3 id="unsigned-long-long"><a href="#unsigned-long-long" class="headerlink" title="unsigned long long"></a>unsigned long long</h3><p><code>%llu</code> </p><p>32位CPU: 8B</p><p>64位CPU: 8B</p><h2 id="size-t-sizeof"><a href="#size-t-sizeof" class="headerlink" title="size_t&amp;sizeof"></a>size_t&amp;sizeof</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int32_t</span> number = <span class="number">123</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%zd %zd\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int32_t</span>), <span class="keyword">sizeof</span>(number));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>%zd</code> ,<code>%zu</code> </p><h2 id="整型实际应用"><a href="#整型实际应用" class="headerlink" title="整型实际应用"></a>整型实际应用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="int8-int8-t-uint8-t"><a href="#int8-int8-t-uint8-t" class="headerlink" title="__int8 -&gt;int8_t&#x2F;uint8_t"></a>__int8 -&gt;int8_t&#x2F;uint8_t</h3><h3 id="int16-int16-t-uint16-t"><a href="#int16-int16-t-uint16-t" class="headerlink" title="__int16 -&gt;int16_t&#x2F;uint16_t"></a>__int16 -&gt;int16_t&#x2F;uint16_t</h3><h3 id="int32-int32-t-uint32-t"><a href="#int32-int32-t-uint32-t" class="headerlink" title="__int32 -&gt;int32_t&#x2F;uint32_t"></a>__int32 -&gt;int32_t&#x2F;uint32_t</h3><p>none, <code>U</code> </p><h3 id="int64-int64-t-uint64-t"><a href="#int64-int64-t-uint64-t" class="headerlink" title="__int64 -&gt;int64_t&#x2F;uint64_t"></a>__int64 -&gt;int64_t&#x2F;uint64_t</h3><p><code>LL</code> ,<code>ULL</code> </p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><h3 id="隐式"><a href="#隐式" class="headerlink" title="隐式"></a>隐式</h3><p><code>unum = num</code> </p><ul><li>小范围-&gt;大范围</li></ul><h3 id="显式"><a href="#显式" class="headerlink" title="显式"></a>显式</h3><p><code>num = unum</code> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint32_t</span> unum = UINT32_MAX;</span><br><span class="line"><span class="type">int32_t</span> num = (<span class="type">int32_t</span>)unum;</span><br></pre></td></tr></table></figure><p>还是做不到吗,C语言🤣👌</p><ol><li>无符号-&gt;有符号</li><li>大范围-&gt;小范围</li></ol><h2 id="printf实际应用"><a href="#printf实际应用" class="headerlink" title="printf实际应用"></a>printf实际应用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;inttypes.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%&quot;</span> PRId32 <span class="string">&quot;\n&quot;</span>, num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%&quot;</span> PRIu32 <span class="string">&quot;\n&quot;</span>, unum);</span><br></pre></td></tr></table></figure><h2 id="int-least32-t-int-fast32-t"><a href="#int-least32-t-int-fast32-t" class="headerlink" title="int_least32_t&amp;int_fast32_t"></a>int_least32_t&amp;int_fast32_t</h2><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><ol><li>记录正负浮点数：左右偏差</li><li>丢失精度</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> max_float = FLT_MAX;</span><br></pre></td></tr></table></figure><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><p>32b&#x3D;1+23+8</p><p>存储,速度</p><p>游戏渲染</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, DBL_DIG);</span><br><span class="line">-&gt;<span class="number">6</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, FLT_DIG);</span><br><span class="line">-&gt;<span class="number">15</span></span><br></pre></td></tr></table></figure><h3 id="double"><a href="#double" class="headerlink" title="double"></a>double</h3><p>64b&#x3D;1+52+11</p><p>精度</p><h3 id="long-double"><a href="#long-double" class="headerlink" title="long double"></a>long double</h3><p><code>L</code> </p><h3 id="infinity-inf"><a href="#infinity-inf" class="headerlink" title="infinity&#x2F;inf"></a>infinity&#x2F;inf</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"><span class="type">float</span> infinity = INFINITY;</span><br></pre></td></tr></table></figure><p>1.0 &#x2F; 0.0</p><h3 id="Not-a-Number-nan"><a href="#Not-a-Number-nan" class="headerlink" title="Not a Number&#x2F;nan"></a>Not a Number&#x2F;nan</h3><p>0.0 &#x2F; 0.0</p><h2 id="signed-char-unsigned-char"><a href="#signed-char-unsigned-char" class="headerlink" title="signed char&#x2F;unsigned char"></a>signed char&#x2F;unsigned char</h2><p>1B</p><p>ASCII</p><h2 id="转义序列"><a href="#转义序列" class="headerlink" title="转义序列"></a>转义序列</h2><p><code>printf(&quot;\033[2J&quot;);</code> 清屏</p><p><code>printf(&quot;\033[%d;%dH&quot;, 3, 3);</code> 更改光标位置</p><h2 id="bool"><a href="#bool" class="headerlink" title="bool"></a>bool</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>1b</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><ol><li><code>const int num = 1;</code> </li><li><code>#define num 1</code> 宏定义</li></ol><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h2><p>多重赋值:从右往左,不超过三层</p><h2 id="按位运算符"><a href="#按位运算符" class="headerlink" title="按位运算符"></a>按位运算符</h2><h3 id="移位"><a href="#移位" class="headerlink" title="移位"></a>移位</h3><p><code>&lt;&lt;</code> 低位补零&amp;<code>&gt;&gt;</code> 高位补零</p><ul><li>直接操作二进制,性能优化</li></ul><h3 id="与"><a href="#与" class="headerlink" title="与"></a>与</h3><p><code>&amp;</code> </p><ul><li>11-&gt;1</li></ul><h3 id="与或-或"><a href="#与或-或" class="headerlink" title="与或&#x2F;或"></a>与或&#x2F;或</h3><p><code>|</code> </p><ul><li>00-&gt;0</li></ul><h3 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h3><p><code>^</code> </p><ul><li>10-&gt;1</li><li>01-&gt;1</li></ul><ol><li><p>二进制数某一位取反</p></li><li><p>交换两数</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a ^ b;</span><br><span class="line">b = a ^ b;</span><br><span class="line">a = a ^ b;</span><br></pre></td></tr></table></figure><h3 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h3><p><code>~</code> </p><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><h3 id=""><a href="#" class="headerlink" title="&amp;&amp;"></a><code>&amp;&amp;</code></h3><h3 id="-1"><a href="#-1" class="headerlink" title="||"></a><code>||</code></h3><h2 id="逗号运算符"><a href="#逗号运算符" class="headerlink" title="逗号运算符"></a>逗号运算符</h2><p><code>,</code> </p><p><code>result = (a = 1, b = 2, c = 3);</code> 只会将最后的c赋值给result</p><h2 id="if…else"><a href="#if…else" class="headerlink" title="if…else"></a>if…else</h2><p>不便于优化:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="type">bool</span> is_a = <span class="number">1</span>;</span><br><span class="line"><span class="type">bool</span> is_b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(is_a &amp;&amp; is_b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pass&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_a != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>便于优化，逻辑不清晰:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> role = <span class="number">3</span>;</span><br><span class="line"><span class="type">uint8_t</span> completeTasks = <span class="number">60</span>;</span><br><span class="line"><span class="type">bool</span> manager_approved = <span class="literal">true</span>;</span><br><span class="line"><span class="type">bool</span> access = (role == <span class="number">1</span>) || (role == <span class="number">2</span> &amp;&amp; completeTasks &gt; <span class="number">30</span>) || (role == <span class="number">3</span> &amp;&amp; completeTasks &gt; <span class="number">50</span> &amp;&amp; manager_approved == <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (access)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch…case"><a href="#switch…case" class="headerlink" title="switch…case"></a>switch…case</h2><ul><li>switch(整型)</li></ul><p>状态机</p><p>便于优化,逻辑清晰:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">checkManager</span><span class="params">()</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">checkEmp</span><span class="params">(<span class="type">uint8_t</span> completeTasks)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">checkIntern</span><span class="params">(<span class="type">uint8_t</span> completeTasks, <span class="type">bool</span> managerApproved)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> role = <span class="number">3</span>;</span><br><span class="line"><span class="type">uint8_t</span> completeTasks = <span class="number">60</span>;</span><br><span class="line"><span class="type">bool</span> managerApproved = <span class="literal">true</span>;</span><br><span class="line"><span class="type">bool</span> access;</span><br><span class="line"><span class="keyword">switch</span> (role)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">access = checkManager();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">access = checkEmp(completeTasks);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">access = checkIntern(completeTasks, managerApproved);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">access = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (access)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">checkManager</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">checkEmp</span><span class="params">(<span class="type">uint8_t</span> completeTasks)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> completeTasks &gt; <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">checkIntern</span><span class="params">(<span class="type">uint8_t</span> completeTasks, <span class="type">bool</span> managerApproved)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> completeTasks &gt; <span class="number">50</span> &amp;&amp; managerApproved == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">switch…case</th><th align="center">if…else</th></tr></thead><tbody><tr><td align="center">整型值传递</td><td align="center">bool类型判断</td></tr></tbody></table><h2 id="运算符"><a href="#运算符" class="headerlink" title="? :运算符"></a>? :运算符</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> grade;</span><br><span class="line"><span class="type">uint8_t</span> score = <span class="number">61</span>;</span><br><span class="line">grade = (score &gt; <span class="number">90</span>) ? <span class="string">&#x27;A&#x27;</span> :</span><br><span class="line">(score &gt; <span class="number">80</span>) ? <span class="string">&#x27;B&#x27;</span> :</span><br><span class="line">(score &gt; <span class="number">70</span>) ? <span class="string">&#x27;C&#x27;</span> :</span><br><span class="line"><span class="string">&#x27;D&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, grade);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="卫语句"><a href="#卫语句" class="headerlink" title="卫语句"></a>卫语句</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">checkCarRent</span><span class="params">(<span class="type">uint8_t</span> age, <span class="type">uint8_t</span> drivingYears)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> age = <span class="number">19</span>;</span><br><span class="line"><span class="type">uint8_t</span> drivingYears = <span class="number">5</span>;</span><br><span class="line">checkCarRent(age, drivingYears);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">checkCarRent</span><span class="params">(<span class="type">uint8_t</span> age, <span class="type">uint8_t</span> drivingYears)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (age &lt; <span class="number">18</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (drivingYears &lt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IT?!</title>
      <link href="/blog/2004/10/28/it/"/>
      <url>/blog/2004/10/28/it/</url>
      
        <content type="html"><![CDATA[<h1 id="🤣👈"><a href="#🤣👈" class="headerlink" title="🤣👈"></a>🤣👈</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
